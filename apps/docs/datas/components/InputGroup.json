[{"tags":{},"filePath":"/packages/components/src/inputs/src/InputGroup.tsx","description":"","displayName":"InputGroup","methods":[],"props":{"isFluid":{"defaultValue":{"value":"false"},"description":"Whether the button takes up the width of its container.","name":"isFluid","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"InputGroupProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"InputGroupProps"}],"required":false,"type":{"name":"ResponsiveProp<boolean>"}},"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: GroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: GroupRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: GroupRenderProps & { defaultClassName: string; }) => string)"}},"role":{"defaultValue":{"value":"'group'"},"description":"An accessibility role for the group. By default, this is set to `'group'`.\nUse `'region'` when the contents of the group is important enough to be\nincluded in the page table of contents. Use `'presentation'` if the group\nis visual only and does not represent a semantic grouping of controls.","name":"role","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"GroupProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"GroupProps"}],"required":false,"type":{"name":"\"group\" | \"region\" | \"presentation\""}},"id":{"defaultValue":null,"description":"","name":"id","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HTMLAttributes"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HTMLAttributes"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"isDisabled":{"defaultValue":null,"description":"Whether the group is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"GroupProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"GroupProps"}],"required":false,"type":{"name":"boolean"}},"isInvalid":{"defaultValue":null,"description":"Whether the group is invalid.","name":"isInvalid","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"GroupProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"GroupProps"}],"required":false,"type":{"name":"boolean"}},"onHoverStart":{"defaultValue":null,"description":"Handler that is called when a hover interaction starts.","name":"onHoverStart","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverEnd":{"defaultValue":null,"description":"Handler that is called when a hover interaction ends.","name":"onHoverEnd","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverChange":{"defaultValue":null,"description":"Handler that is called when the hover state changes.","name":"onHoverChange","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((isHovering: boolean) => void)"}}},"groups":{"default":{"isFluid":{"defaultValue":{"value":"false"},"description":"Whether the button takes up the width of its container.","name":"isFluid","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"InputGroupProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"InputGroupProps"}],"required":false,"type":{"name":"ResponsiveProp<boolean>"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: GroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: GroupRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: GroupRenderProps & { defaultClassName: string; }) => string)"}},"isDisabled":{"defaultValue":null,"description":"Whether the group is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"GroupProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"GroupProps"}],"required":false,"type":{"name":"boolean"}},"isInvalid":{"defaultValue":null,"description":"Whether the group is invalid.","name":"isInvalid","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"GroupProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"GroupProps"}],"required":false,"type":{"name":"boolean"}}},"Events":{"onHoverStart":{"defaultValue":null,"description":"Handler that is called when a hover interaction starts.","name":"onHoverStart","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverEnd":{"defaultValue":null,"description":"Handler that is called when a hover interaction ends.","name":"onHoverEnd","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverChange":{"defaultValue":null,"description":"Handler that is called when the hover state changes.","name":"onHoverChange","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((isHovering: boolean) => void)"}}},"Layout":{"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}}},"Spacing":{},"Sizing":{},"Background":{},"Borders":{},"Shadows":{},"Positioning":{},"Typography":{},"Accessibility":{"role":{"defaultValue":{"value":"'group'"},"description":"An accessibility role for the group. By default, this is set to `'group'`.\nUse `'region'` when the contents of the group is important enough to be\nincluded in the page table of contents. Use `'presentation'` if the group\nis visual only and does not represent a semantic grouping of controls.","name":"role","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"GroupProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"GroupProps"}],"required":false,"type":{"name":"\"group\" | \"region\" | \"presentation\""}},"id":{"defaultValue":null,"description":"","name":"id","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HTMLAttributes"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"HTMLAttributes"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/InputGroup.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}}}}}]