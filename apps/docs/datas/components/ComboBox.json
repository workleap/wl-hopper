[{"tags":{},"filePath":"/packages/components/src/ComboBox/src/ComboBox.tsx","description":"","displayName":"ComboBoxItem","methods":[],"props":{"isLoading":{"defaultValue":null,"description":"Whether the item is loading.","name":"isLoading","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"boolean"}},"size":{"defaultValue":{"value":"\"sm\""},"description":"A ListBoxItem can vary in size.","name":"size","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"ResponsiveProp<ListBoxItemSize>"}},"isInvalid":{"defaultValue":null,"description":"Whether or not the ListBoxItem is in an invalid state.","name":"isInvalid","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"}],"required":false,"type":{"name":"boolean"}},"selectionIndicator":{"defaultValue":{"value":"\"check\""},"description":"The selection indicator to use. Only available if the selection mode is not \"none\".\nWhen set to \"input\", the selection indicator will be an either a radio or checkbox based on the selection mode.","name":"selectionIndicator","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"}],"required":false,"type":{"name":"SelectionIndicator"}},"radioProps":{"defaultValue":null,"description":"The props for the Radio.","name":"radioProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"}],"required":false,"type":{"name":"DecorativeRadioProps"}},"checkboxProps":{"defaultValue":null,"description":"The props for the Checkbox.","name":"checkboxProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"}],"required":false,"type":{"name":"DecorativeCheckboxProps"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: ListBoxItemRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"id":{"defaultValue":null,"description":"The unique id of the item.","name":"id","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"Key"}},"value":{"defaultValue":null,"description":"The object value that this item represents. When using dynamic collections, this is set automatically.","name":"value","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"object"}},"textValue":{"defaultValue":null,"description":"A string representation of the item's contents, used for features like typeahead.","name":"textValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"string"}},"aria-label":{"defaultValue":null,"description":"An accessibility label for this item.","name":"aria-label","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"string"}},"isDisabled":{"defaultValue":null,"description":"Whether the item is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"boolean"}},"onAction":{"defaultValue":null,"description":"Handler that is called when a user performs an action on the item. The exact user event depends on\nthe collection's `selectionBehavior` prop and the interaction modality.","name":"onAction","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"(() => void)"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: ListBoxItemRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: ListBoxItemRenderProps & { defaultClassName: string; }) => string)"}},"href":{"defaultValue":null,"description":"A URL to link to. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#href).","name":"href","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"hrefLang":{"defaultValue":null,"description":"Hints at the human language of the linked URL. See[MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#hreflang).","name":"hrefLang","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"target":{"defaultValue":null,"description":"The target window for the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target).","name":"target","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"HTMLAttributeAnchorTarget"}},"rel":{"defaultValue":null,"description":"The relationship between the linked resource and the current page. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel).","name":"rel","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"download":{"defaultValue":null,"description":"Causes the browser to download the linked URL. A string may be provided to suggest a file name. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#download).","name":"download","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string | boolean"}},"ping":{"defaultValue":null,"description":"A space-separated list of URLs to ping when the link is followed. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#ping).","name":"ping","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"referrerPolicy":{"defaultValue":null,"description":"How much of the referrer to send when following the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#referrerpolicy).","name":"referrerPolicy","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"HTMLAttributeReferrerPolicy"}},"routerOptions":{"defaultValue":null,"description":"Options for the configured client side router.","name":"routerOptions","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"undefined"}},"onHoverStart":{"defaultValue":null,"description":"Handler that is called when a hover interaction starts.","name":"onHoverStart","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverEnd":{"defaultValue":null,"description":"Handler that is called when a hover interaction ends.","name":"onHoverEnd","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverChange":{"defaultValue":null,"description":"Handler that is called when the hover state changes.","name":"onHoverChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((isHovering: boolean) => void)"}}},"groups":{"default":{"isLoading":{"defaultValue":null,"description":"Whether the item is loading.","name":"isLoading","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"boolean"}},"size":{"defaultValue":{"value":"\"sm\""},"description":"A ListBoxItem can vary in size.","name":"size","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"ResponsiveProp<ListBoxItemSize>"}},"isInvalid":{"defaultValue":null,"description":"Whether or not the ListBoxItem is in an invalid state.","name":"isInvalid","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"}],"required":false,"type":{"name":"boolean"}},"selectionIndicator":{"defaultValue":{"value":"\"check\""},"description":"The selection indicator to use. Only available if the selection mode is not \"none\".\nWhen set to \"input\", the selection indicator will be an either a radio or checkbox based on the selection mode.","name":"selectionIndicator","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"}],"required":false,"type":{"name":"SelectionIndicator"}},"radioProps":{"defaultValue":null,"description":"The props for the Radio.","name":"radioProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"}],"required":false,"type":{"name":"DecorativeRadioProps"}},"checkboxProps":{"defaultValue":null,"description":"The props for the Checkbox.","name":"checkboxProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemSharedProps"}],"required":false,"type":{"name":"DecorativeCheckboxProps"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: ListBoxItemRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"id":{"defaultValue":null,"description":"The unique id of the item.","name":"id","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"Key"}},"value":{"defaultValue":null,"description":"The object value that this item represents. When using dynamic collections, this is set automatically.","name":"value","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"object"}},"textValue":{"defaultValue":null,"description":"A string representation of the item's contents, used for features like typeahead.","name":"textValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"string"}},"isDisabled":{"defaultValue":null,"description":"Whether the item is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: ListBoxItemRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: ListBoxItemRenderProps & { defaultClassName: string; }) => string)"}},"href":{"defaultValue":null,"description":"A URL to link to. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#href).","name":"href","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"hrefLang":{"defaultValue":null,"description":"Hints at the human language of the linked URL. See[MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#hreflang).","name":"hrefLang","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"target":{"defaultValue":null,"description":"The target window for the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target).","name":"target","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"HTMLAttributeAnchorTarget"}},"rel":{"defaultValue":null,"description":"The relationship between the linked resource and the current page. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel).","name":"rel","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"download":{"defaultValue":null,"description":"Causes the browser to download the linked URL. A string may be provided to suggest a file name. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#download).","name":"download","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string | boolean"}},"ping":{"defaultValue":null,"description":"A space-separated list of URLs to ping when the link is followed. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#ping).","name":"ping","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"referrerPolicy":{"defaultValue":null,"description":"How much of the referrer to send when following the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#referrerpolicy).","name":"referrerPolicy","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"HTMLAttributeReferrerPolicy"}},"routerOptions":{"defaultValue":null,"description":"Options for the configured client side router.","name":"routerOptions","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"undefined"}}},"Events":{"onAction":{"defaultValue":null,"description":"Handler that is called when a user performs an action on the item. The exact user event depends on\nthe collection's `selectionBehavior` prop and the interaction modality.","name":"onAction","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"(() => void)"}},"onHoverStart":{"defaultValue":null,"description":"Handler that is called when a hover interaction starts.","name":"onHoverStart","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverEnd":{"defaultValue":null,"description":"Handler that is called when a hover interaction ends.","name":"onHoverEnd","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverChange":{"defaultValue":null,"description":"Handler that is called when the hover state changes.","name":"onHoverChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((isHovering: boolean) => void)"}}},"Layout":{},"Spacing":{},"Sizing":{},"Background":{},"Borders":{},"Shadows":{},"Positioning":{},"Typography":{},"Accessibility":{"aria-label":{"defaultValue":null,"description":"An accessibility label for this item.","name":"aria-label","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ListBoxItemProps"}],"required":false,"type":{"name":"string"}}}}},{"tags":{},"filePath":"/packages/components/src/ComboBox/src/ComboBox.tsx","description":"","displayName":"ComboBoxSection","methods":[],"props":{"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element.","name":"style","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleProps"}],"required":false,"type":{"name":"CSSProperties"}},"id":{"defaultValue":null,"description":"The unique id of the section.","name":"id","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"}],"required":false,"type":{"name":"Key"}},"value":{"defaultValue":null,"description":"The object value that this section represents. When using dynamic collections, this is set automatically.","name":"value","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"}],"required":false,"type":{"name":"T"}},"aria-label":{"defaultValue":null,"description":"An accessibility label for the section.","name":"aria-label","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"}],"required":false,"type":{"name":"string"}},"children":{"defaultValue":null,"description":"Static child items or a function to render children.","name":"children","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"}],"required":false,"type":{"name":"ReactNode | ((item: T) => ReactElement<any, string | JSXElementConstructor<any>>)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element.","name":"className","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleProps"}],"required":false,"type":{"name":"string"}},"items":{"defaultValue":null,"description":"Item objects in the section.","name":"items","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"}],"required":false,"type":{"name":"Iterable<T>"}},"dependencies":{"defaultValue":null,"description":"Values that should invalidate the item cache when using dynamic collections.","name":"dependencies","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"}],"required":false,"type":{"name":"readonly any[]"}},"ref":{"defaultValue":null,"description":"","name":"ref","declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"ForwardedRef<HTMLDivElement>"}}},"groups":{"default":{"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element.","name":"style","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleProps"}],"required":false,"type":{"name":"CSSProperties"}},"id":{"defaultValue":null,"description":"The unique id of the section.","name":"id","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"}],"required":false,"type":{"name":"Key"}},"value":{"defaultValue":null,"description":"The object value that this section represents. When using dynamic collections, this is set automatically.","name":"value","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"}],"required":false,"type":{"name":"T"}},"children":{"defaultValue":null,"description":"Static child items or a function to render children.","name":"children","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"}],"required":false,"type":{"name":"ReactNode | ((item: T) => ReactElement<any, string | JSXElementConstructor<any>>)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element.","name":"className","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleProps"}],"required":false,"type":{"name":"string"}},"items":{"defaultValue":null,"description":"Item objects in the section.","name":"items","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"}],"required":false,"type":{"name":"Iterable<T>"}},"dependencies":{"defaultValue":null,"description":"Values that should invalidate the item cache when using dynamic collections.","name":"dependencies","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"}],"required":false,"type":{"name":"readonly any[]"}}},"Events":{},"Layout":{},"Spacing":{},"Sizing":{},"Background":{},"Borders":{},"Shadows":{},"Positioning":{},"Typography":{},"Accessibility":{"aria-label":{"defaultValue":null,"description":"An accessibility label for the section.","name":"aria-label","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SectionProps"}],"required":false,"type":{"name":"string"}}}}},{"tags":{},"filePath":"/packages/components/src/ComboBox/src/ComboBox.tsx","description":"","displayName":"ComboBox","methods":[],"props":{"align":{"defaultValue":{"value":"\"start\""},"description":"The alignment of the menu.","name":"align","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<MenuAlignment>"}},"children":{"defaultValue":null,"description":"The items of the combo box.","name":"children","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":true,"type":{"name":"ReactNode | ((item: T) => ReactNode)"}},"direction":{"defaultValue":{"value":"\"bottom\""},"description":"The direction that the menu should open.","name":"direction","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<MenuDirection>"}},"footer":{"defaultValue":null,"description":"The footer of the combo box.","name":"footer","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ReactNode"}},"isAutoMenuWidth":{"defaultValue":null,"description":"If `true`, the combo box menu will not be the width of the trigger and instead be the width of its contents.","name":"isAutoMenuWidth","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"inputRef":{"defaultValue":null,"description":"A ref for the HTML input element.","name":"inputRef","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"MutableRefObject<HTMLInputElement | null>"}},"isFluid":{"defaultValue":{"value":"false"},"description":"If `true`, the select will take all available width.","name":"isFluid","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<boolean>"}},"isLoading":{"defaultValue":null,"description":"Whether data is currently being loaded.","name":"isLoading","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"listBoxProps":{"defaultValue":null,"description":"The list box props.","name":"listBoxProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ListBoxProps<T>"}},"onLoadMore":{"defaultValue":null,"description":"Handler that is called when more items should be loaded, e.g. while scrolling near the bottom.","name":"onLoadMore","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"(() => void)"}},"placeholder":{"defaultValue":null,"description":"The placeholder text when the select is empty.","name":"placeholder","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"string"}},"popoverProps":{"defaultValue":null,"description":"The props for the popover.","name":"popoverProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"PopoverProps"}},"prefix":{"defaultValue":null,"description":"An icon or text to display at the start of the select trigger.","name":"prefix","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ReactNode"}},"selectionIndicator":{"defaultValue":{"value":"\"check\""},"description":"The selection indicator to use. Only available if the selection mode is not \"none\".\nWhen set to \"input\", the selection indicator will be either a radio or checkbox based on the selection mode.","name":"selectionIndicator","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"SelectionIndicator"}},"shouldFlip":{"defaultValue":null,"description":"Whether the element should flip its orientation (e.g. top to bottom or left to right) when there is insufficient room for it to render completely.","name":"shouldFlip","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"triggerProps":{"defaultValue":null,"description":"The props for the select's trigger.","name":"triggerProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"InputGroupProps"}},"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: ComboBoxRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"id":{"defaultValue":null,"description":"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).","name":"id","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"DOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"DOMProps"}],"required":false,"type":{"name":"string"}},"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"isDisabled":{"defaultValue":null,"description":"Whether the input is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: ComboBoxRenderProps & { defaultClassName: string; }) => string)"}},"isInvalid":{"defaultValue":null,"description":"Whether the input value is invalid.","name":"isInvalid","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"}],"required":false,"type":{"name":"boolean"}},"items":{"defaultValue":null,"description":"The list of ComboBox items (controlled).","name":"items","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"Iterable<T>"}},"validationBehavior":{"defaultValue":{"value":"'native'"},"description":"Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.","name":"validationBehavior","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"RACValidation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"RACValidation"}],"required":false,"type":{"name":"\"native\" | \"aria\""}},"onSelectionChange":{"defaultValue":null,"description":"Handler that is called when the selection changes.","name":"onSelectionChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((key: Key | null) => void)"}},"selectedKey":{"defaultValue":null,"description":"The currently selected key in the collection (controlled).","name":"selectedKey","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"}],"required":false,"type":{"name":"Key | null"}},"defaultSelectedKey":{"defaultValue":null,"description":"The initial selected key in the collection (uncontrolled).","name":"defaultSelectedKey","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"}],"required":false,"type":{"name":"Key"}},"shouldFocusWrap":{"defaultValue":null,"description":"Whether keyboard navigation is circular.","name":"shouldFocusWrap","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"defaultItems":{"defaultValue":null,"description":"The list of ComboBox items (uncontrolled).","name":"defaultItems","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"Iterable<T>"}},"onOpenChange":{"defaultValue":null,"description":"Method that is called when the open state of the menu changes. Returns the new open state and the action that caused the opening of the menu.","name":"onOpenChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((isOpen: boolean, menuTrigger?: MenuTriggerAction) => void)"}},"inputValue":{"defaultValue":null,"description":"The value of the ComboBox input (controlled).","name":"inputValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"string"}},"defaultInputValue":{"defaultValue":null,"description":"The default value of the ComboBox input (uncontrolled).","name":"defaultInputValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"string"}},"onInputChange":{"defaultValue":null,"description":"Handler that is called when the ComboBox input value changes.","name":"onInputChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((value: string) => void)"}},"allowsCustomValue":{"defaultValue":null,"description":"Whether the ComboBox allows a non-item matching input value to be set.","name":"allowsCustomValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"menuTrigger":{"defaultValue":{"value":"'input'"},"description":"The interaction required to display the ComboBox menu.","name":"menuTrigger","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"MenuTriggerAction"}},"disabledKeys":{"defaultValue":null,"description":"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.","name":"disabledKeys","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"CollectionBase"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"CollectionBase"}],"required":false,"type":{"name":"Iterable<Key>"}},"isReadOnly":{"defaultValue":null,"description":"Whether the input can be selected but not changed by the user.","name":"isReadOnly","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"}],"required":false,"type":{"name":"boolean"}},"isRequired":{"defaultValue":null,"description":"Whether user input is required on the input before form submission.","name":"isRequired","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"}],"required":false,"type":{"name":"boolean"}},"validate":{"defaultValue":null,"description":"A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.","name":"validate","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"}],"required":false,"type":{"name":"((value: ComboBoxValidationValue) => true | ValidationError | null)"}},"autoFocus":{"defaultValue":null,"description":"Whether the element should receive focus on render.","name":"autoFocus","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusableProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusableProps"}],"required":false,"type":{"name":"boolean"}},"onFocus":{"defaultValue":null,"description":"Handler that is called when the element receives focus.","name":"onFocus","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<HTMLInputElement, Element>) => void)"}},"onBlur":{"defaultValue":null,"description":"Handler that is called when the element loses focus.","name":"onBlur","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<HTMLInputElement, Element>) => void)"}},"onFocusChange":{"defaultValue":null,"description":"Handler that is called when the element's focus status changes.","name":"onFocusChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((isFocused: boolean) => void)"}},"onKeyDown":{"defaultValue":null,"description":"Handler that is called when a key is pressed.","name":"onKeyDown","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"onKeyUp":{"defaultValue":null,"description":"Handler that is called when a key is released.","name":"onKeyUp","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"name":{"defaultValue":null,"description":"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).","name":"name","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputDOMProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"defaultFilter":{"defaultValue":null,"description":"The filter function used to determine if a option should be included in the combo box list.","name":"defaultFilter","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((textValue: string, inputValue: string) => boolean)"}},"formValue":{"defaultValue":{"value":"'key'"},"description":"Whether the text or key of the selected item is submitted as part of an HTML form.\nWhen `allowsCustomValue` is `true`, this option does not apply and the text is always submitted.","name":"formValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"\"text\" | \"key\""}},"allowsEmptyCollection":{"defaultValue":null,"description":"Whether the combo box allows the menu to be open when the collection is empty.","name":"allowsEmptyCollection","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"description":{"defaultValue":null,"description":"The helper message of the field.","name":"description","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"}],"required":false,"type":{"name":"ReactNode"}},"errorMessage":{"defaultValue":null,"description":"The error message of the field.","name":"errorMessage","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"}],"required":false,"type":{"name":"ReactNode | ((v: ValidationResult) => ReactNode)"}},"label":{"defaultValue":null,"description":"The label of the field.","name":"label","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"}],"required":false,"type":{"name":"ReactNode"}},"necessityIndicator":{"defaultValue":null,"description":"Whether the required state should be shown as an asterisk or a label, which would display (Optional) on all non required field labels.","name":"necessityIndicator","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"}],"required":false,"type":{"name":"NecessityIndicator"}},"size":{"defaultValue":{"value":"\"md\""},"description":"A Field can vary in size.","name":"size","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"}],"required":false,"type":{"name":"ResponsiveProp<FieldSize>"}}},"groups":{"default":{"align":{"defaultValue":{"value":"\"start\""},"description":"The alignment of the menu.","name":"align","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<MenuAlignment>"}},"children":{"defaultValue":null,"description":"The items of the combo box.","name":"children","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":true,"type":{"name":"ReactNode | ((item: T) => ReactNode)"}},"direction":{"defaultValue":{"value":"\"bottom\""},"description":"The direction that the menu should open.","name":"direction","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<MenuDirection>"}},"footer":{"defaultValue":null,"description":"The footer of the combo box.","name":"footer","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ReactNode"}},"isAutoMenuWidth":{"defaultValue":null,"description":"If `true`, the combo box menu will not be the width of the trigger and instead be the width of its contents.","name":"isAutoMenuWidth","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"inputRef":{"defaultValue":null,"description":"A ref for the HTML input element.","name":"inputRef","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"MutableRefObject<HTMLInputElement | null>"}},"isFluid":{"defaultValue":{"value":"false"},"description":"If `true`, the select will take all available width.","name":"isFluid","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<boolean>"}},"isLoading":{"defaultValue":null,"description":"Whether data is currently being loaded.","name":"isLoading","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"listBoxProps":{"defaultValue":null,"description":"The list box props.","name":"listBoxProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ListBoxProps<T>"}},"placeholder":{"defaultValue":null,"description":"The placeholder text when the select is empty.","name":"placeholder","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"string"}},"popoverProps":{"defaultValue":null,"description":"The props for the popover.","name":"popoverProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"PopoverProps"}},"prefix":{"defaultValue":null,"description":"An icon or text to display at the start of the select trigger.","name":"prefix","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ReactNode"}},"selectionIndicator":{"defaultValue":{"value":"\"check\""},"description":"The selection indicator to use. Only available if the selection mode is not \"none\".\nWhen set to \"input\", the selection indicator will be either a radio or checkbox based on the selection mode.","name":"selectionIndicator","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"SelectionIndicator"}},"shouldFlip":{"defaultValue":null,"description":"Whether the element should flip its orientation (e.g. top to bottom or left to right) when there is insufficient room for it to render completely.","name":"shouldFlip","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"triggerProps":{"defaultValue":null,"description":"The props for the select's trigger.","name":"triggerProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"InputGroupProps"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: ComboBoxRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"isDisabled":{"defaultValue":null,"description":"Whether the input is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: ComboBoxRenderProps & { defaultClassName: string; }) => string)"}},"isInvalid":{"defaultValue":null,"description":"Whether the input value is invalid.","name":"isInvalid","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"}],"required":false,"type":{"name":"boolean"}},"items":{"defaultValue":null,"description":"The list of ComboBox items (controlled).","name":"items","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"Iterable<T>"}},"validationBehavior":{"defaultValue":{"value":"'native'"},"description":"Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.","name":"validationBehavior","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"RACValidation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"RACValidation"}],"required":false,"type":{"name":"\"native\" | \"aria\""}},"selectedKey":{"defaultValue":null,"description":"The currently selected key in the collection (controlled).","name":"selectedKey","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"}],"required":false,"type":{"name":"Key | null"}},"defaultSelectedKey":{"defaultValue":null,"description":"The initial selected key in the collection (uncontrolled).","name":"defaultSelectedKey","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"}],"required":false,"type":{"name":"Key"}},"shouldFocusWrap":{"defaultValue":null,"description":"Whether keyboard navigation is circular.","name":"shouldFocusWrap","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"defaultItems":{"defaultValue":null,"description":"The list of ComboBox items (uncontrolled).","name":"defaultItems","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"Iterable<T>"}},"inputValue":{"defaultValue":null,"description":"The value of the ComboBox input (controlled).","name":"inputValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"string"}},"defaultInputValue":{"defaultValue":null,"description":"The default value of the ComboBox input (uncontrolled).","name":"defaultInputValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"string"}},"allowsCustomValue":{"defaultValue":null,"description":"Whether the ComboBox allows a non-item matching input value to be set.","name":"allowsCustomValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"menuTrigger":{"defaultValue":{"value":"'input'"},"description":"The interaction required to display the ComboBox menu.","name":"menuTrigger","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"MenuTriggerAction"}},"disabledKeys":{"defaultValue":null,"description":"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.","name":"disabledKeys","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"CollectionBase"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"CollectionBase"}],"required":false,"type":{"name":"Iterable<Key>"}},"isReadOnly":{"defaultValue":null,"description":"Whether the input can be selected but not changed by the user.","name":"isReadOnly","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"}],"required":false,"type":{"name":"boolean"}},"isRequired":{"defaultValue":null,"description":"Whether user input is required on the input before form submission.","name":"isRequired","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"}],"required":false,"type":{"name":"boolean"}},"validate":{"defaultValue":null,"description":"A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.","name":"validate","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"}],"required":false,"type":{"name":"((value: ComboBoxValidationValue) => true | ValidationError | null)"}},"autoFocus":{"defaultValue":null,"description":"Whether the element should receive focus on render.","name":"autoFocus","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusableProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusableProps"}],"required":false,"type":{"name":"boolean"}},"name":{"defaultValue":null,"description":"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).","name":"name","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputDOMProps"}],"required":false,"type":{"name":"string"}},"defaultFilter":{"defaultValue":null,"description":"The filter function used to determine if a option should be included in the combo box list.","name":"defaultFilter","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((textValue: string, inputValue: string) => boolean)"}},"formValue":{"defaultValue":{"value":"'key'"},"description":"Whether the text or key of the selected item is submitted as part of an HTML form.\nWhen `allowsCustomValue` is `true`, this option does not apply and the text is always submitted.","name":"formValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"\"text\" | \"key\""}},"allowsEmptyCollection":{"defaultValue":null,"description":"Whether the combo box allows the menu to be open when the collection is empty.","name":"allowsEmptyCollection","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"description":{"defaultValue":null,"description":"The helper message of the field.","name":"description","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"}],"required":false,"type":{"name":"ReactNode"}},"errorMessage":{"defaultValue":null,"description":"The error message of the field.","name":"errorMessage","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"}],"required":false,"type":{"name":"ReactNode | ((v: ValidationResult) => ReactNode)"}},"label":{"defaultValue":null,"description":"The label of the field.","name":"label","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"}],"required":false,"type":{"name":"ReactNode"}},"necessityIndicator":{"defaultValue":null,"description":"Whether the required state should be shown as an asterisk or a label, which would display (Optional) on all non required field labels.","name":"necessityIndicator","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"}],"required":false,"type":{"name":"NecessityIndicator"}},"size":{"defaultValue":{"value":"\"md\""},"description":"A Field can vary in size.","name":"size","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FieldProps"}],"required":false,"type":{"name":"ResponsiveProp<FieldSize>"}}},"Events":{"onLoadMore":{"defaultValue":null,"description":"Handler that is called when more items should be loaded, e.g. while scrolling near the bottom.","name":"onLoadMore","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"(() => void)"}},"onSelectionChange":{"defaultValue":null,"description":"Handler that is called when the selection changes.","name":"onSelectionChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((key: Key | null) => void)"}},"onOpenChange":{"defaultValue":null,"description":"Method that is called when the open state of the menu changes. Returns the new open state and the action that caused the opening of the menu.","name":"onOpenChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((isOpen: boolean, menuTrigger?: MenuTriggerAction) => void)"}},"onInputChange":{"defaultValue":null,"description":"Handler that is called when the ComboBox input value changes.","name":"onInputChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((value: string) => void)"}},"onFocus":{"defaultValue":null,"description":"Handler that is called when the element receives focus.","name":"onFocus","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<HTMLInputElement, Element>) => void)"}},"onBlur":{"defaultValue":null,"description":"Handler that is called when the element loses focus.","name":"onBlur","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<HTMLInputElement, Element>) => void)"}},"onFocusChange":{"defaultValue":null,"description":"Handler that is called when the element's focus status changes.","name":"onFocusChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((isFocused: boolean) => void)"}},"onKeyDown":{"defaultValue":null,"description":"Handler that is called when a key is pressed.","name":"onKeyDown","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"onKeyUp":{"defaultValue":null,"description":"Handler that is called when a key is released.","name":"onKeyUp","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}}},"Layout":{"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}}},"Spacing":{},"Sizing":{},"Background":{},"Borders":{},"Shadows":{},"Positioning":{},"Typography":{},"Accessibility":{"id":{"defaultValue":null,"description":"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).","name":"id","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"DOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"DOMProps"}],"required":false,"type":{"name":"string"}},"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}}}}}]