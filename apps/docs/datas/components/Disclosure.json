[{"tags":{},"filePath":"/packages/components/src/Disclosure/src/Disclosure.tsx","description":"","displayName":"Disclosure","methods":[],"props":{"variant":{"defaultValue":null,"description":"","name":"variant","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"DisclosureProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"DisclosureProps"}],"required":false,"type":{"name":"\"standalone\" | \"inline\""}},"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: DisclosureRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: DisclosureRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"isDisabled":{"defaultValue":null,"description":"Whether the disclosure is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"}],"required":false,"type":{"name":"boolean"}},"onExpandedChange":{"defaultValue":null,"description":"Handler that is called when the disclosure's expanded state changes.","name":"onExpandedChange","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"}],"required":false,"type":{"name":"((isExpanded: boolean) => void)"}},"isExpanded":{"defaultValue":null,"description":"Whether the disclosure is expanded (controlled).","name":"isExpanded","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"}],"required":false,"type":{"name":"boolean"}},"defaultExpanded":{"defaultValue":null,"description":"Whether the disclosure is expanded by default (uncontrolled).","name":"defaultExpanded","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"}],"required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"An id for the disclosure when used within a DisclosureGroup, matching the id used in `expandedKeys`.","name":"id","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"DisclosureProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"DisclosureProps"}],"required":false,"type":{"name":"Key"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: DisclosureRenderProps & { defaultClassName: string; }) => string)"}}},"groups":{"default":{"variant":{"defaultValue":null,"description":"","name":"variant","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"DisclosureProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"DisclosureProps"}],"required":false,"type":{"name":"\"standalone\" | \"inline\""}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: DisclosureRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: DisclosureRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"isDisabled":{"defaultValue":null,"description":"Whether the disclosure is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"}],"required":false,"type":{"name":"boolean"}},"isExpanded":{"defaultValue":null,"description":"Whether the disclosure is expanded (controlled).","name":"isExpanded","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"}],"required":false,"type":{"name":"boolean"}},"defaultExpanded":{"defaultValue":null,"description":"Whether the disclosure is expanded by default (uncontrolled).","name":"defaultExpanded","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"}],"required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"An id for the disclosure when used within a DisclosureGroup, matching the id used in `expandedKeys`.","name":"id","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"DisclosureProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"DisclosureProps"}],"required":false,"type":{"name":"Key"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: DisclosureRenderProps & { defaultClassName: string; }) => string)"}}},"Events":{"onExpandedChange":{"defaultValue":null,"description":"Handler that is called when the disclosure's expanded state changes.","name":"onExpandedChange","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"AriaDisclosureProps"}],"required":false,"type":{"name":"((isExpanded: boolean) => void)"}}},"Layout":{"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/Disclosure/src/Disclosure.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}}},"Spacing":{},"Sizing":{},"Background":{},"Borders":{},"Shadows":{},"Positioning":{},"Typography":{},"Accessibility":{}}}]