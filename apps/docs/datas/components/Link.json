[{"tags":{},"filePath":"/packages/components/src/Link/src/Link.tsx","description":"","displayName":"Link","methods":[],"props":{"variant":{"defaultValue":{"value":"\"primary\""},"description":"The visual style of the link.","name":"variant","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"LinkVariant"}},"size":{"defaultValue":{"value":"\"inherit\""},"description":"Size of the link.","name":"size","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"ResponsiveProp<LinkSize>"}},"isQuiet":{"defaultValue":null,"description":"Whether the link should be displayed with a quiet style.","name":"isQuiet","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"isExternal":{"defaultValue":null,"description":"Whether the link should open in a new tab.","name":"isExternal","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"isStandalone":{"defaultValue":null,"description":"Wheter the link is standalone","name":"isStandalone","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: LinkRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"isDisabled":{"defaultValue":null,"description":"Whether the link is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLinkOptions"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLinkOptions"}],"required":false,"type":{"name":"boolean"}},"onPress":{"defaultValue":null,"description":"Handler that is called when the press is released over the target.","name":"onPress","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"}],"required":false,"type":{"name":"((e: PressEvent) => void)"}},"onPressStart":{"defaultValue":null,"description":"Handler that is called when a press interaction starts.","name":"onPressStart","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"}],"required":false,"type":{"name":"((e: PressEvent) => void)"}},"onPressEnd":{"defaultValue":null,"description":"Handler that is called when a press interaction ends, either\nover the target or when the pointer leaves the target.","name":"onPressEnd","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"}],"required":false,"type":{"name":"((e: PressEvent) => void)"}},"onPressChange":{"defaultValue":null,"description":"Handler that is called when the press state changes.","name":"onPressChange","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"}],"required":false,"type":{"name":"((isPressed: boolean) => void)"}},"onPressUp":{"defaultValue":null,"description":"Handler that is called when a press is released over the target, regardless of\nwhether it started on the target or not.","name":"onPressUp","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"}],"required":false,"type":{"name":"((e: PressEvent) => void)"}},"onClick":{"defaultValue":null,"description":"**Not recommended â€“ use `onPress` instead.** `onClick` is an alias for `onPress`\nprovided for compatibility with other libraries. `onPress` provides \nadditional event details for non-mouse interactions.","name":"onClick","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"}],"required":false,"type":{"name":"((e: MouseEvent<FocusableElement, MouseEvent>) => void)"}},"autoFocus":{"defaultValue":null,"description":"Whether the element should receive focus on render.","name":"autoFocus","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusableProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusableProps"}],"required":false,"type":{"name":"boolean"}},"onFocus":{"defaultValue":null,"description":"Handler that is called when the element receives focus.","name":"onFocus","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onBlur":{"defaultValue":null,"description":"Handler that is called when the element loses focus.","name":"onBlur","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onFocusChange":{"defaultValue":null,"description":"Handler that is called when the element's focus status changes.","name":"onFocusChange","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((isFocused: boolean) => void)"}},"onKeyDown":{"defaultValue":null,"description":"Handler that is called when a key is pressed.","name":"onKeyDown","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"onKeyUp":{"defaultValue":null,"description":"Handler that is called when a key is released.","name":"onKeyUp","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"href":{"defaultValue":null,"description":"A URL to link to. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#href).","name":"href","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"hrefLang":{"defaultValue":null,"description":"Hints at the human language of the linked URL. See[MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#hreflang).","name":"hrefLang","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"target":{"defaultValue":null,"description":"The target window for the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target).","name":"target","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"HTMLAttributeAnchorTarget"}},"rel":{"defaultValue":null,"description":"The relationship between the linked resource and the current page. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel).","name":"rel","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"download":{"defaultValue":null,"description":"Causes the browser to download the linked URL. A string may be provided to suggest a file name. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#download).","name":"download","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string | boolean"}},"ping":{"defaultValue":null,"description":"A space-separated list of URLs to ping when the link is followed. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#ping).","name":"ping","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"referrerPolicy":{"defaultValue":null,"description":"How much of the referrer to send when following the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#referrerpolicy).","name":"referrerPolicy","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"HTMLAttributeReferrerPolicy"}},"routerOptions":{"defaultValue":null,"description":"Options for the configured client side router.","name":"routerOptions","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"undefined"}},"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"onHoverStart":{"defaultValue":null,"description":"Handler that is called when a hover interaction starts.","name":"onHoverStart","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverEnd":{"defaultValue":null,"description":"Handler that is called when a hover interaction ends.","name":"onHoverEnd","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverChange":{"defaultValue":null,"description":"Handler that is called when the hover state changes.","name":"onHoverChange","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((isHovering: boolean) => void)"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: LinkRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: LinkRenderProps & { defaultClassName: string; }) => string)"}}},"groups":{"default":{"variant":{"defaultValue":{"value":"\"primary\""},"description":"The visual style of the link.","name":"variant","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"LinkVariant"}},"size":{"defaultValue":{"value":"\"inherit\""},"description":"Size of the link.","name":"size","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"ResponsiveProp<LinkSize>"}},"isQuiet":{"defaultValue":null,"description":"Whether the link should be displayed with a quiet style.","name":"isQuiet","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"isExternal":{"defaultValue":null,"description":"Whether the link should open in a new tab.","name":"isExternal","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"isStandalone":{"defaultValue":null,"description":"Wheter the link is standalone","name":"isStandalone","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: LinkRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"isDisabled":{"defaultValue":null,"description":"Whether the link is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLinkOptions"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLinkOptions"}],"required":false,"type":{"name":"boolean"}},"autoFocus":{"defaultValue":null,"description":"Whether the element should receive focus on render.","name":"autoFocus","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusableProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusableProps"}],"required":false,"type":{"name":"boolean"}},"href":{"defaultValue":null,"description":"A URL to link to. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#href).","name":"href","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"hrefLang":{"defaultValue":null,"description":"Hints at the human language of the linked URL. See[MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#hreflang).","name":"hrefLang","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"target":{"defaultValue":null,"description":"The target window for the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target).","name":"target","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"HTMLAttributeAnchorTarget"}},"rel":{"defaultValue":null,"description":"The relationship between the linked resource and the current page. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel).","name":"rel","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"download":{"defaultValue":null,"description":"Causes the browser to download the linked URL. A string may be provided to suggest a file name. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#download).","name":"download","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string | boolean"}},"ping":{"defaultValue":null,"description":"A space-separated list of URLs to ping when the link is followed. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#ping).","name":"ping","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"string"}},"referrerPolicy":{"defaultValue":null,"description":"How much of the referrer to send when following the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#referrerpolicy).","name":"referrerPolicy","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"HTMLAttributeReferrerPolicy"}},"routerOptions":{"defaultValue":null,"description":"Options for the configured client side router.","name":"routerOptions","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"LinkDOMProps"}],"required":false,"type":{"name":"undefined"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: LinkRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: LinkRenderProps & { defaultClassName: string; }) => string)"}}},"Events":{"onPress":{"defaultValue":null,"description":"Handler that is called when the press is released over the target.","name":"onPress","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"}],"required":false,"type":{"name":"((e: PressEvent) => void)"}},"onPressStart":{"defaultValue":null,"description":"Handler that is called when a press interaction starts.","name":"onPressStart","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"}],"required":false,"type":{"name":"((e: PressEvent) => void)"}},"onPressEnd":{"defaultValue":null,"description":"Handler that is called when a press interaction ends, either\nover the target or when the pointer leaves the target.","name":"onPressEnd","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"}],"required":false,"type":{"name":"((e: PressEvent) => void)"}},"onPressChange":{"defaultValue":null,"description":"Handler that is called when the press state changes.","name":"onPressChange","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"}],"required":false,"type":{"name":"((isPressed: boolean) => void)"}},"onPressUp":{"defaultValue":null,"description":"Handler that is called when a press is released over the target, regardless of\nwhether it started on the target or not.","name":"onPressUp","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"}],"required":false,"type":{"name":"((e: PressEvent) => void)"}},"onClick":{"defaultValue":null,"description":"**Not recommended â€“ use `onPress` instead.** `onClick` is an alias for `onPress`\nprovided for compatibility with other libraries. `onPress` provides \nadditional event details for non-mouse interactions.","name":"onClick","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"PressEvents"}],"required":false,"type":{"name":"((e: MouseEvent<FocusableElement, MouseEvent>) => void)"}},"onFocus":{"defaultValue":null,"description":"Handler that is called when the element receives focus.","name":"onFocus","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onBlur":{"defaultValue":null,"description":"Handler that is called when the element loses focus.","name":"onBlur","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onFocusChange":{"defaultValue":null,"description":"Handler that is called when the element's focus status changes.","name":"onFocusChange","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((isFocused: boolean) => void)"}},"onKeyDown":{"defaultValue":null,"description":"Handler that is called when a key is pressed.","name":"onKeyDown","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"onKeyUp":{"defaultValue":null,"description":"Handler that is called when a key is released.","name":"onKeyUp","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"onHoverStart":{"defaultValue":null,"description":"Handler that is called when a hover interaction starts.","name":"onHoverStart","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverEnd":{"defaultValue":null,"description":"Handler that is called when a hover interaction ends.","name":"onHoverEnd","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverChange":{"defaultValue":null,"description":"Handler that is called when the hover state changes.","name":"onHoverChange","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((isHovering: boolean) => void)"}}},"Layout":{"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}}},"Spacing":{},"Sizing":{},"Background":{},"Borders":{},"Shadows":{},"Positioning":{},"Typography":{},"Accessibility":{"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/Link/src/Link.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}}}}}]