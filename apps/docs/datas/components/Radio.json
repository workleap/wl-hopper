[{"tags":{},"filePath":"/packages/components/src/radio/src/Radio.tsx","description":"","displayName":"Radio","methods":[],"props":{"size":{"defaultValue":{"value":"\"md\""},"description":"A radio can vary in size.","name":"size","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"}],"required":false,"type":{"name":"ResponsiveProp<FieldSize>"}},"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: RadioRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: RadioRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"value":{"defaultValue":null,"description":"The value of the radio button, used when submitting an HTML form.\nSee [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio#Value).","name":"value","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"}],"required":true,"type":{"name":"string"}},"isDisabled":{"defaultValue":null,"description":"Whether the radio button is disabled or not.\nShows that a selection exists, but is not available in that circumstance.","name":"isDisabled","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"}],"required":false,"type":{"name":"boolean"}},"autoFocus":{"defaultValue":null,"description":"Whether the element should receive focus on render.","name":"autoFocus","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusableProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusableProps"}],"required":false,"type":{"name":"boolean"}},"onFocus":{"defaultValue":null,"description":"Handler that is called when the element receives focus.","name":"onFocus","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onBlur":{"defaultValue":null,"description":"Handler that is called when the element loses focus.","name":"onBlur","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onFocusChange":{"defaultValue":null,"description":"Handler that is called when the element's focus status changes.","name":"onFocusChange","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((isFocused: boolean) => void)"}},"onKeyDown":{"defaultValue":null,"description":"Handler that is called when a key is pressed.","name":"onKeyDown","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"onKeyUp":{"defaultValue":null,"description":"Handler that is called when a key is released.","name":"onKeyUp","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"id":{"defaultValue":null,"description":"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).","name":"id","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"DOMProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"DOMProps"}],"required":false,"type":{"name":"string"}},"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"inputRef":{"defaultValue":null,"description":"A ref for the HTML input element.","name":"inputRef","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"}],"required":false,"type":{"name":"RefObject<HTMLInputElement | null>"}},"onHoverStart":{"defaultValue":null,"description":"Handler that is called when a hover interaction starts.","name":"onHoverStart","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverEnd":{"defaultValue":null,"description":"Handler that is called when a hover interaction ends.","name":"onHoverEnd","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverChange":{"defaultValue":null,"description":"Handler that is called when the hover state changes.","name":"onHoverChange","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((isHovering: boolean) => void)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: RadioRenderProps & { defaultClassName: string; }) => string)"}}},"groups":{"default":{"size":{"defaultValue":{"value":"\"md\""},"description":"A radio can vary in size.","name":"size","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"}],"required":false,"type":{"name":"ResponsiveProp<FieldSize>"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: RadioRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: RadioRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"value":{"defaultValue":null,"description":"The value of the radio button, used when submitting an HTML form.\nSee [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio#Value).","name":"value","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"}],"required":true,"type":{"name":"string"}},"isDisabled":{"defaultValue":null,"description":"Whether the radio button is disabled or not.\nShows that a selection exists, but is not available in that circumstance.","name":"isDisabled","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"}],"required":false,"type":{"name":"boolean"}},"autoFocus":{"defaultValue":null,"description":"Whether the element should receive focus on render.","name":"autoFocus","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusableProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusableProps"}],"required":false,"type":{"name":"boolean"}},"inputRef":{"defaultValue":null,"description":"A ref for the HTML input element.","name":"inputRef","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"RadioProps"}],"required":false,"type":{"name":"RefObject<HTMLInputElement | null>"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: RadioRenderProps & { defaultClassName: string; }) => string)"}}},"Events":{"onFocus":{"defaultValue":null,"description":"Handler that is called when the element receives focus.","name":"onFocus","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onBlur":{"defaultValue":null,"description":"Handler that is called when the element loses focus.","name":"onBlur","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onFocusChange":{"defaultValue":null,"description":"Handler that is called when the element's focus status changes.","name":"onFocusChange","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((isFocused: boolean) => void)"}},"onKeyDown":{"defaultValue":null,"description":"Handler that is called when a key is pressed.","name":"onKeyDown","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"onKeyUp":{"defaultValue":null,"description":"Handler that is called when a key is released.","name":"onKeyUp","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"onHoverStart":{"defaultValue":null,"description":"Handler that is called when a hover interaction starts.","name":"onHoverStart","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverEnd":{"defaultValue":null,"description":"Handler that is called when a hover interaction ends.","name":"onHoverEnd","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((e: HoverEvent) => void)"}},"onHoverChange":{"defaultValue":null,"description":"Handler that is called when the hover state changes.","name":"onHoverChange","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"HoverEvents"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"HoverEvents"}],"required":false,"type":{"name":"((isHovering: boolean) => void)"}}},"Layout":{"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}}},"Spacing":{},"Sizing":{},"Background":{},"Borders":{},"Shadows":{},"Positioning":{},"Typography":{},"Accessibility":{"id":{"defaultValue":null,"description":"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).","name":"id","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"DOMProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"DOMProps"}],"required":false,"type":{"name":"string"}},"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/radio/src/Radio.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}}}}}]