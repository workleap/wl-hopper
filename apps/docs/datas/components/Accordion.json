[{"tags":{},"filePath":"/packages/components/src/accordion/src/Accordion.tsx","description":"","displayName":"Accordion","methods":[],"props":{"variant":{"defaultValue":null,"description":"","name":"variant","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"AccordionProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"AccordionProps"}],"required":false,"type":{"name":"\"standalone\" | \"inline\""}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: DisclosureGroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"allowsMultipleExpanded":{"defaultValue":null,"description":"Whether multiple items can be expanded at the same time.","name":"allowsMultipleExpanded","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"}],"required":false,"type":{"name":"boolean"}},"isDisabled":{"defaultValue":null,"description":"Whether all items are disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"}],"required":false,"type":{"name":"boolean"}},"expandedKeys":{"defaultValue":null,"description":"The currently expanded keys in the group (controlled).","name":"expandedKeys","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"}],"required":false,"type":{"name":"Iterable<Key>"}},"defaultExpandedKeys":{"defaultValue":null,"description":"The initial expanded keys in the group (uncontrolled).","name":"defaultExpandedKeys","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"}],"required":false,"type":{"name":"Iterable<Key>"}},"onExpandedChange":{"defaultValue":null,"description":"Handler that is called when items are expanded or collapsed.","name":"onExpandedChange","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"}],"required":false,"type":{"name":"((keys: Set<Key>) => any)"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: DisclosureGroupRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: DisclosureGroupRenderProps & { defaultClassName: string; }) => string)"}},"id":{"defaultValue":null,"description":"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).","name":"id","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DOMProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DOMProps"}],"required":false,"type":{"name":"string"}},"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}}},"groups":{"default":{"variant":{"defaultValue":null,"description":"","name":"variant","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"AccordionProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"AccordionProps"}],"required":false,"type":{"name":"\"standalone\" | \"inline\""}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: DisclosureGroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"allowsMultipleExpanded":{"defaultValue":null,"description":"Whether multiple items can be expanded at the same time.","name":"allowsMultipleExpanded","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"}],"required":false,"type":{"name":"boolean"}},"isDisabled":{"defaultValue":null,"description":"Whether all items are disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"}],"required":false,"type":{"name":"boolean"}},"expandedKeys":{"defaultValue":null,"description":"The currently expanded keys in the group (controlled).","name":"expandedKeys","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"}],"required":false,"type":{"name":"Iterable<Key>"}},"defaultExpandedKeys":{"defaultValue":null,"description":"The initial expanded keys in the group (uncontrolled).","name":"defaultExpandedKeys","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"}],"required":false,"type":{"name":"Iterable<Key>"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: DisclosureGroupRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: DisclosureGroupRenderProps & { defaultClassName: string; }) => string)"}}},"Events":{"onExpandedChange":{"defaultValue":null,"description":"Handler that is called when items are expanded or collapsed.","name":"onExpandedChange","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DisclosureGroupProps"}],"required":false,"type":{"name":"((keys: Set<Key>) => any)"}}},"Layout":{"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}}},"Spacing":{},"Sizing":{},"Background":{},"Borders":{},"Shadows":{},"Positioning":{},"Typography":{},"Accessibility":{"id":{"defaultValue":null,"description":"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).","name":"id","parent":{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DOMProps"},"declarations":[{"fileName":"/packages/components/src/accordion/src/Accordion.tsx","name":"DOMProps"}],"required":false,"type":{"name":"string"}}}}}]